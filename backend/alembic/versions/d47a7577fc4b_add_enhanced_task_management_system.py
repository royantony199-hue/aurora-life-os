"""Add enhanced task management system

Revision ID: d47a7577fc4b
Revises: 460a7810e382
Create Date: 2025-08-13 14:59:16.847499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd47a7577fc4b'
down_revision: Union[str, None] = '460a7810e382'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_dependencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('depends_on_task_id', sa.Integer(), nullable=False),
    sa.Column('dependency_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_dependency', 'task_dependencies', ['task_id', 'depends_on_task_id'], unique=False)
    op.create_index(op.f('ix_task_dependencies_id'), 'task_dependencies', ['id'], unique=False)
    op.drop_index('idx_user_sent_at', table_name='proactive_message_logs')
    op.drop_index('idx_user_trigger_cooldown', table_name='proactive_message_logs')
    op.drop_index('ix_proactive_message_logs_id', table_name='proactive_message_logs')
    op.drop_table('proactive_message_logs')
    op.drop_index('ix_user_proactive_preferences_id', table_name='user_proactive_preferences')
    op.drop_table('user_proactive_preferences')
    op.add_column('tasks', sa.Column('task_type', sa.Enum('ACTION', 'MILESTONE', 'HABIT', 'RESEARCH', 'DECISION', 'REVIEW', name='tasktype'), nullable=False))
    op.add_column('tasks', sa.Column('estimated_duration', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('actual_duration', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('progress_percentage', sa.Float(), nullable=True))
    op.add_column('tasks', sa.Column('completion_notes', sa.Text(), nullable=True))
    op.add_column('tasks', sa.Column('parent_task_id', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('order_index', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('energy_level_required', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('preferred_time_of_day', sa.String(length=20), nullable=True))
    op.add_column('tasks', sa.Column('is_flexible_timing', sa.Boolean(), nullable=True))
    op.add_column('tasks', sa.Column('ai_suggestions', sa.Text(), nullable=True))
    op.add_column('tasks', sa.Column('started_at', sa.DateTime(), nullable=True))
    op.alter_column('tasks', 'status',
               existing_type=sa.VARCHAR(length=11),
               nullable=False)
    op.alter_column('tasks', 'priority',
               existing_type=sa.VARCHAR(length=6),
               nullable=False)
    op.create_index('idx_due_date', 'tasks', ['due_date'], unique=False)
    op.create_index('idx_goal_order', 'tasks', ['goal_id', 'order_index'], unique=False)
    op.create_index('idx_user_status', 'tasks', ['user_id', 'status'], unique=False)
    op.create_foreign_key(None, 'tasks', 'tasks', ['parent_task_id'], ['id'])
    op.drop_column('tasks', 'estimated_time')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('estimated_time', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_index('idx_user_status', table_name='tasks')
    op.drop_index('idx_goal_order', table_name='tasks')
    op.drop_index('idx_due_date', table_name='tasks')
    op.alter_column('tasks', 'priority',
               existing_type=sa.VARCHAR(length=6),
               nullable=True)
    op.alter_column('tasks', 'status',
               existing_type=sa.VARCHAR(length=11),
               nullable=True)
    op.drop_column('tasks', 'started_at')
    op.drop_column('tasks', 'ai_suggestions')
    op.drop_column('tasks', 'is_flexible_timing')
    op.drop_column('tasks', 'preferred_time_of_day')
    op.drop_column('tasks', 'energy_level_required')
    op.drop_column('tasks', 'order_index')
    op.drop_column('tasks', 'parent_task_id')
    op.drop_column('tasks', 'completion_notes')
    op.drop_column('tasks', 'progress_percentage')
    op.drop_column('tasks', 'actual_duration')
    op.drop_column('tasks', 'estimated_duration')
    op.drop_column('tasks', 'task_type')
    op.create_table('user_proactive_preferences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('mood_reminders', sa.BOOLEAN(), nullable=True),
    sa.Column('goal_reminders', sa.BOOLEAN(), nullable=True),
    sa.Column('energy_insights', sa.BOOLEAN(), nullable=True),
    sa.Column('calendar_insights', sa.BOOLEAN(), nullable=True),
    sa.Column('max_messages_per_day', sa.INTEGER(), nullable=True),
    sa.Column('check_interval_minutes', sa.INTEGER(), nullable=True),
    sa.Column('quiet_hours_start', sa.INTEGER(), nullable=True),
    sa.Column('quiet_hours_end', sa.INTEGER(), nullable=True),
    sa.Column('timezone', sa.VARCHAR(), nullable=True),
    sa.Column('preferred_trigger_times', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('ix_user_proactive_preferences_id', 'user_proactive_preferences', ['id'], unique=False)
    op.create_table('proactive_message_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('trigger_type', sa.VARCHAR(), nullable=False),
    sa.Column('message_id', sa.INTEGER(), nullable=True),
    sa.Column('sent_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('cooldown_expires_at', sa.DATETIME(), nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), nullable=True),
    sa.Column('read_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'trigger_type', 'sent_at', name='_user_trigger_time_uc')
    )
    op.create_index('ix_proactive_message_logs_id', 'proactive_message_logs', ['id'], unique=False)
    op.create_index('idx_user_trigger_cooldown', 'proactive_message_logs', ['user_id', 'trigger_type', 'cooldown_expires_at'], unique=False)
    op.create_index('idx_user_sent_at', 'proactive_message_logs', ['user_id', 'sent_at'], unique=False)
    op.drop_index(op.f('ix_task_dependencies_id'), table_name='task_dependencies')
    op.drop_index('idx_task_dependency', table_name='task_dependencies')
    op.drop_table('task_dependencies')
    # ### end Alembic commands ###
